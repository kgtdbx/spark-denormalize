## the resource api version
##
apiVersion: v1

## a relationship between DataSources, based on equivalent join-key representations
##
kind: DataRelationship

## the metadata of this resource
##
metadata:

  ## the name of this relationship
  ##
  name: "test" ## TODO: remove after test

## the spec of this resource
##
spec:

  ## a list of equivalent representations for a single join key
  ##
  ## WARNING:
  ##  - each data source may only appear in ONE element of `representations`
  ##  - all `representations` must have the same number of elements in `joinKey`
  ##  - all `representations` must have the same `castDataType` at each list index in `joinKey`
  ##
  ## EXAMPLE:
  ##    representations:
  ##      - dataSources:
  ##          - kind: HDFSLikeDataSource
  ##            name: customer
  ##        joinKey:
  ##          - fields:
  ##              - fieldName: custno
  ##                dataType: string
  ##      - dataSources:
  ##          - kind: HDFSLikeDataSource
  ##            name: customer_address
  ##          - kind: HDFSLikeDataSource
  ##            name: customer_contact
  ##        joinKey:
  ##          - fields:
  ##              - fieldName: customer_number
  ##                dataType: integer
  ##            query: "ROUND(customer_number, 0)"
  ##
  representations:

    - ## the list of data sources which contain the representation defined in `joinKey`
      ##
      dataSources:

        - ## the kind of data source
          ##
          kind: "HDFSLikeDataSource" ## TODO: remove after test

          ## the name of the data source
          ##
          name: "test" ## TODO: remove after test

        # TODO: remove after test
        - kind: "JDBCDataSource"
          name: "test"

      ## the join-key representation
      ##
      ## NOTE:
      ##  - specifying multiple elements defines a compound key, not alternatives
      ##
      joinKey:

        - ## the list of fields which will be used in `query`
          ##
          fields:

            - ## the field name/reference
              ##
              ## FORMAT:
              ##  - a Spark field reference, for example: "struct_field.inner_field"
              ##
              fieldName: "test" ## TODO: remove after test

              ## the field's data type
              ##
              ## FORMAT:
              ##  - see `_data_type.yaml`
              ##
              dataType:
                string: {} ## TODO: remove after test

          ## a SparkSQL column expression to transform the fields
          ##
          ## WARNING:
          ##  - only reference fields declared in `fields[]`, else error
          ##
          ## FORMAT:
          ##  - see SparkSQL docs: https://spark.apache.org/docs/3.0.1/api/sql/index.html
          ##
          ## EXAMPLE:
          ##    query: "ROUND(customer_id, 0)"
          ##
          #query: "" # default: `fields[0].fieldName`

          ## the data type to cast the output of `query` as
          ##
          ## WARNING:
          ##  - using anything other than "string" may result in NULL for cases where casting is not possible
          ##    (for example, "a" cannot be cast to Integer, so becomes NULL)
          ##
          ## NOTE:
          ##  - this feature prevents spark unexpectedly casting a field using its magic
          ##
          ## FORMAT:
          ##  - see `_data_type.yaml`
          ##
          castDataType:
            string: {}