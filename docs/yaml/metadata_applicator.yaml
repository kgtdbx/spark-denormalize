## the resource api version
##
apiVersion: v1

## a definition of how to apply metadata to a DataSource
##
kind: MetadataApplicator

## the metadata of this resource
##
metadata:

  ## the name of this metadata applicator
  ##
  name: "test" ## TODO: remove after test

## the spec of this resource
##
spec:

  ## the behavior if metadata ALREADY EXISTS on a matched field
  ##
  ## FORMAT:
  ##  - `IGNORE`:  dont change existing metadata keys/values
  ##  - `MERGE`:   merge metadata keys/values (keeping the new values)
  ##  - `REPLACE`: replace ALL existing metadata keys/values
  ##
  behaviour: "MERGE"

  ## a list of field selectors
  ##
  ## NOTE:
  ##  - we UNION together the list of fields matched by each selector
  ##
  fieldSelectors:

    - ## a regex selector for fields to INCLUDE
      ##
      ## NOTE:
      ##  - the regex finds matches of 'coordinates' over each field in the data schema
      ##    ('coordinates' are field references concatenated with `:`)
      ##     - StructField (root):        `field_name`
      ##     - StructField (inner field): `struct_name:inner_field`
      ##     - Array (inner field):       `array_name:inner_field`
      ##     - Map (key field):           `map_name:key:inner_field`
      ##     - Map (value field):         `map_name:value:inner_field`
      ##
      ## EXAMPLE:
      ##    coordinateIncludeRegex: ".*cust.*name.*"
      ##
      coordinateIncludeRegex: ".*" ## TODO: remove after test

      ## a regex selector for fields to EXCLUDE
      ##
      ## NOTE:
      ##  - `coordinateExcludeRegex` takes precedence over `coordinateIncludeRegex`
      ##
      coordinateExcludeRegex: ".*" ## TODO: remove after test

  ## a metadata map to apply to the matched fields
  ##
  ## EXAMPLE:
  ##    metadata:
  ##      pii_class: "sensitive"
  ##      other_key: "some_value"
  ##
  metadata: {}